{"ast":null,"code":"var _jsxFileName = \"/Users/lebersmeaton/Desktop/Bella/SheCodes/SheCodes+/W4HW/thunders-react/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./WeatherForecast.css\";\nimport Axios from \"axios\"; // import { cleanup } from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let latitude = props.coordinates.lat;\n    let longitude = props.coordinates.lon;\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=${units}`;\n    Axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/lebersmeaton/Desktop/Bella/SheCodes/SheCodes+/W4HW/thunders-react/src/WeatherForecast.js"],"names":["React","useState","useEffect","WeatherForecastDay","Axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","load","latitude","lat","longitude","lon","units","apiKey","apiUrl","get","then","map","dailyForecast","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASQ,IAAT,GAAgB;AACd,QAAIC,QAAQ,GAAGX,KAAK,CAACK,WAAN,CAAkBO,GAAjC;AACA,QAAIC,SAAS,GAAGb,KAAK,CAACK,WAAN,CAAkBS,GAAlC;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,MAAM,GAAI,uDAAsDN,QAAS,QAAOE,SAAU,UAASG,MAAO,UAASD,KAAM,EAA7H;AAEAjB,IAAAA,KAAK,CAACoB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBb,cAAvB;AACD;;AAED,MAAIL,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKE,QAAQ,CAACiB,GAAT,CAAa,UAASC,aAAT,EAAwBC,KAAxB,EAA+B;AAC3C,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,gCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE,QAAC,kBAAD;AAAoB,gBAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAND,MAMO;AACL,mBAAO,IAAP;AACD;AACF,SAVA;AADL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACLZ,IAAAA,IAAI;AAEJ,WAAO,IAAP;AACD;AACF;;GA9CuBX,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./WeatherForecast.css\";\nimport Axios from \"axios\";\n// import { cleanup } from \"@testing-library/react\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let latitude = props.coordinates.lat;\n    let longitude = props.coordinates.lon;\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=${units}`;\n\n    Axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n            {forecast.map(function(dailyForecast, index) {\n              if (index < 5) {\n                return (\n                  <div className=\"col\" key={index}>\n                    <WeatherForecastDay data={dailyForecast} />\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })}\n        </div>\n      </div>\n    );\n  } else {\n    load();\n\n    return null;\n  }\n}"]},"metadata":{},"sourceType":"module"}