{"ast":null,"code":"var _jsxFileName = \"/Users/lebersmeaton/Desktop/Bella/SheCodes/SheCodes+/W4HW/thunders-react/src/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport BeachImage from \"./BeachImage.svg\"; // relative path to image\n\nimport WeatherForecast from \"./WeatherForecast\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherApp(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    // console.log(response.data);\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      city: response.data.name,\n      feelsLike: response.data.main.feels_like,\n      tempMax: response.data.main.temp_max,\n      tempMin: response.data.main.temp_min,\n      tempHumidity: response.data.main.humidity,\n      windSpeed: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon\n    });\n  }\n\n  function search() {\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function searchGeolocation(props) {\n    console.log(props.coordinates);\n    let latitude = props.coordinates.lat;\n    let longitude = props.coordinates.lon;\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getCurrentPosition(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(searchGeolocation);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherApp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: BeachImage,\n          className: \"mainImage\",\n          alt: \"two people on beach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AppContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Search\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              label: \"Search new city\",\n              className: \"form-control\",\n              placeholder: \"Search new city\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              type: \"submit\",\n              value: \"Search\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n          data: weatherData,\n          getCurrentPosition: getCurrentPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"funWeatherDescription\",\n          children: \"Very hot! Afternoon cool change. Drink more water.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n          coordinates: weatherData.coordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(WeatherApp, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n\n_c = WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/lebersmeaton/Desktop/Bella/SheCodes/SheCodes+/W4HW/thunders-react/src/WeatherApp.js"],"names":["React","useState","axios","WeatherInfo","WeatherForecast","WeatherApp","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","coordinates","data","coord","temperature","main","temp","name","feelsLike","feels_like","tempMax","temp_max","tempMin","temp_min","tempHumidity","humidity","windSpeed","wind","speed","description","weather","date","Date","dt","icon","search","units","apiKey","apiUrl","get","then","handleSubmit","event","preventDefault","handleCityChange","target","value","searchGeolocation","console","log","latitude","lat","longitude","lon","getCurrentPosition","navigator","geolocation","BeachImage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport BeachImage from \"./BeachImage.svg\"; // relative path to image\nimport WeatherForecast from \"./WeatherForecast\";\nimport \"./Weather.css\";\n\nexport default function WeatherApp(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    // console.log(response.data);\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      city: response.data.name,\n      feelsLike: response.data.main.feels_like,\n      tempMax: response.data.main.temp_max,\n      tempMin: response.data.main.temp_min,\n      tempHumidity: response.data.main.humidity,\n      windSpeed: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon\n    })\n  }\n\n  function search(){\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event){\n    setCity(event.target.value);\n  }\n\n  function searchGeolocation(props) {\n    console.log(props.coordinates);\n\n    let latitude = props.coordinates.lat;\n    let longitude = props.coordinates.lon;\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=${units}`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n  \n  function getCurrentPosition(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(searchGeolocation);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"WeatherApp\">\n        <div>\n          <img src={BeachImage} className=\"mainImage\" alt={\"two people on beach\"} />\n        </div>\n        \n        <div className=\"AppContainer\">\n          <div className=\"Search\">\n            <form onSubmit={handleSubmit}>\n              <input\n                type=\"search\"\n                label=\"Search new city\"\n                className=\"form-control\"\n                placeholder=\"Search new city\"\n                onChange={handleCityChange}\n              />\n              <button\n                className=\"btn\"\n                type=\"submit\"\n                value=\"Search\">\n                🔍\n              </button>\n            </form>\n          </div>\n\n          <WeatherInfo data={weatherData} getCurrentPosition={getCurrentPosition} />\n\n          {/*Fun Description Row*/}\n          <h1 className=\"funWeatherDescription\">\n            Very hot! Afternoon cool change. Drink more water.\n          </h1>\n\n          <WeatherForecast coordinates={weatherData.coordinates} />\n        </div>\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}