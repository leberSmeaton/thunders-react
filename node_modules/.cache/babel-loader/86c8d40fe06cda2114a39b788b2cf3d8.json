{"ast":null,"code":"var _jsxFileName = \"/Users/lebersmeaton/Desktop/Bella/SheCodes/SheCodes+/W4HW/thunders-react/src/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport BeachImage from \"./BeachImage.svg\"; // relative path to image\n\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherApp() {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      cityName: response.data.name,\n      feelsLike: response.data.main.feels_like,\n      tempMax: response.data.main.temp_max,\n      tempMin: response.data.main.temp_min,\n      tempHumidity: response.data.main.humidity,\n      windSpeed: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000)\n    });\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherApp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: BeachImage,\n          className: \"mainImage\",\n          alt: \"two people on beach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AppContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Search\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SearchForm\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"search-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"search\",\n                className: \"form-control\",\n                placeholder: \"Search new city\",\n                id: \"search-text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                type: \"submit\",\n                value: \"Search\",\n                id: \"button-addon1\",\n                children: \"\\uD83D\\uDD0D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"GeoTagButton\",\n                type: \"submit\",\n                id: \"geoLocation\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  roll: \"img\",\n                  children: \"\\uD83D\\uDCCD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                id: \"currentLocation\",\n                className: \"currentLocation\",\n                children: \"Melbourne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), \" \", \"| \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"dateTime\",\n                children: [/*#__PURE__*/_jsxDEV(FormattedDate, {\n                  date: weatherData.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 39\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"funWeatherDescription\",\n          children: \"Very hot! Afternoon cool change. Drink more water.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else {\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let cityInput = \"New York\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${cityInput}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\n_s(WeatherApp, \"tUtfTt5AWoQL1bRls7ZkwlkTJP4=\");\n\n_c = WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/lebersmeaton/Desktop/Bella/SheCodes/SheCodes+/W4HW/thunders-react/src/WeatherApp.js"],"names":["React","useState","axios","FormattedDate","WeatherInfo","WeatherApp","weatherData","setWeatherData","ready","handleResponse","response","console","log","data","temperature","main","temp","cityName","name","feelsLike","feels_like","tempMax","temp_max","tempMin","temp_min","tempHumidity","humidity","windSpeed","wind","speed","description","weather","date","Date","dt","BeachImage","units","apiKey","cityInput","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport BeachImage from \"./BeachImage.svg\"; // relative path to image\nimport \"./Weather.css\";\n\nexport default function WeatherApp() {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      cityName: response.data.name,\n      feelsLike: response.data.main.feels_like,\n      tempMax: response.data.main.temp_max,\n      tempMin: response.data.main.temp_min,\n      tempHumidity: response.data.main.humidity,\n      windSpeed: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000)\n    })\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"WeatherApp\">\n        <div>\n          <img src={BeachImage} className=\"mainImage\" alt={\"two people on beach\"} />\n        </div>\n        \n        <div className=\"AppContainer\">\n          <div className=\"Search\">\n            <div className=\"SearchForm\">\n              <form id=\"search-form\">\n                <input\n                  type=\"search\"\n                  className=\"form-control\"\n                  placeholder=\"Search new city\"\n                  id=\"search-text-input\"\n                />\n                <button\n                  className=\"btn\"\n                  type=\"submit\"\n                  value=\"Search\"\n                  id=\"button-addon1\">\n                  🔍\n                </button>\n              </form>\n            </div>\n\n            <div>\n              <h4>\n                <button className=\"GeoTagButton\" type=\"submit\" id=\"geoLocation\">\n                <span roll=\"img\">📍</span>\n                </button>\n                <strong id=\"currentLocation\" className=\"currentLocation\">\n                  Melbourne\n                </strong>{\" \"}\n                | <span id=\"dateTime\"><FormattedDate date={weatherData.date} /> </span>\n              </h4>\n            </div>\n          </div>\n\n          <WeatherInfo />\n          \n          {/*Fun Description Row*/}\n          <h1 className=\"funWeatherDescription\">\n            Very hot! Afternoon cool change. Drink more water.\n          </h1>\n        </div>\n      </div>\n    );\n  } else {\n    let units = \"metric\";\n    let apiKey = \"31856a05b9b062fb137620991f56055f\";\n    let cityInput = \"New York\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${cityInput}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}